<h1>So how does it all work?</h1>

<ol>
<li><a href="#ProfilesLink">Profiles</a></li>
<li><a href="#ElementNames">Unique Element Names</a></li>
<li><a href="#QuickTutorial">Quick Tutorial</a></li>
</ol>

<h2><a name="ProfilesLink">Profiles</a></h2>
<p>Profiles are used to define the relationships between elements, associated attributes and known attribute values for a specific XML "style" (the way a specific type of XML document is always built).  This idea is best explained with the help of an example: let's say that you have an XML config file that you are forever copying and pasting and tweaking for a new project/system/data packet, etc.  Not only is this a tedious and rather silly way of doing things, it is also a sure way to introduce errors into your XML.</p>

<p>Alternatively, you could import XML (Edit->Import XML to Profile) into a new or existing profile and use that profile to build similar documents in the future.  The profile will remember the relationships between the imported elements themselves as well as between elements and their associated attributes (in other words, if "yourElement" is generally associated with attributes "yourFirstAttribute", "yourSecondAttribute" etc, then the profile will remember these relationships) as well as all known values that has ever been assigned to any particular attribute.</p>

<p>What this means is that, the next time you build your XML config document, you can do it via a graphical user interface without the need to remember which elements are children of which other elements, which attributes go with these elements or which possible values (or value types) the various attributes can and cannot have.  You will furthermore be restricted to working within the bounds of the known relationships (similar to what an XML schema does) so that you do not accidentally mess up parent/child relationships or assign the wrong attributes to elements.</p>

<p>A word of advice, however: Do not mix XML styles that are vastly different from each other.  Rather create a profile for each type (or closely related) type of XML document you generally work with, i.e. a "MyXmlProfile" for "MyXmlConfig" (and even maybe "MyXmlConfigSlightlyDifferent") is recommended.  Of course, you can do what you want, but this application was designed to work best under these conditions.</p>

<h3><a name="ElementNames">Unique Element Names</a></h3>
<p>Profiles rely on unique element names to keep track of everything (pay attention, this is very important).  What this means is that, in order for everything to work as you would expect, you will have to make sure that you do not re-use element names in your XML in conflicting ways.  This of course does not mean that you cannot use an element name more than once in a document (that would just be daft) but rather that all elements of the same name should "do the same thing".  If you don't adhere to this advice, things will most probably not work out as well as it could.</p>

<h3><a name="QuickTutorial">Quick Tutorial</a></h3>
