<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>GCMainWindow</class>
 <widget class="QMainWindow" name="GCMainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1015</width>
    <height>571</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>The Goblin's XML Machine!</string>
  </property>
  <property name="windowIcon">
   <iconset resource="resources/gcresources.qrc">
    <normaloff>:/resources/goblinicon.jpg</normaloff>:/resources/goblinicon.jpg</iconset>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow
{
  background-color: rgba(90, 90, 95, 255);
  font: 20px;
}

QMainWindow::separator
{
   background-color: rgba(255, 255, 255, 10 );
   width: 3px;
   height: 3px;
 }

QMainWindow::separator:hover
{
  background-color: rgb(190, 196, 209);
}

QDialog
{
  background-color: rgba(150, 150, 150, 255);
}

QMessageBox
{
  background-color: rgba(120, 120, 120, 255);
}

QPushButton
{
  color: rgb(0, 0, 0);
  background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(110, 110, 110, 240), stop:1 rgba(150, 150, 160, 255));
  border-width: 1px;
  border-radius: 5px;
  border-color: gray;
  border-style: outset;
  font: 12px;
  min-width: 5em;
  min-height: 1em;
  padding: 3px;
}

QPushButton:pressed
{
  color: rgb(190, 190, 190);
  background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(150, 150, 160, 240), stop:1 rgba(110, 110, 125, 255));
  border-style: inset;
}

QPushButton:default 
{
   border-color: gray;
   border-width: 2px;   
   background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(110, 110, 110, 255), stop:1 rgba(190, 190, 190, 255));
 }

QToolButton
{
  background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(110, 110, 110, 255), stop:1 rgba(150, 150, 160, 255));
  border-width: 1px;
  border-radius: 5px;
  border-color: rgb(40, 40, 40);
  border-style: outset;
}

QToolButton:pressed
{
  background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(110, 110, 110, 255), stop:1 rgba(150, 150, 160, 255));
  border-style: inset;
}

QComboBox
{
  color: rgb(250, 250, 250 );
  background-color: qlineargradient(spread:reflect, x1:0.5, y1:0.5, x2:0.5, y2:1, stop:0 rgba(110, 110, 110, 240), stop:1 rgba(150, 150, 160, 255));
  selection-background-color: rgb(90, 90, 90);
  border-width: 1px;
  border-radius: 5px;
  border-color: rgb(40, 40, 40);
  border-style: outset;
  font: 12px;
  min-width: 7em;
  min-height: 1em;
  padding: 2px;
  text-align: right;
}

QComboBox::drop-down
{
  subcontrol-origin: padding;
  subcontrol-position: top right;
  left: -5px;
  width: 18px;
  border-left-color: transparent;
  text-align: right;
}

QComboBox::down-arrow
{
  width: 17px;
  height: 17px;
  image: url(&quot;:/resources/downarrow.png&quot;);
  opacity: 0.1;
}

QComboBox QAbstractItemView
{
   selection-color: rgb(20, 20, 20);
   color: rgb(200, 200, 200);
   selection-background-color: rgba(110, 110, 110, 255);
}

QListView
{
  border-width: 1px;
  border-radius: 5px;
  border-color: rgb(40, 40, 40);
  border-style: inset;
  background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(40, 40, 40, 200), stop:1 rgba(120, 120, 120, 255));
  font: 11px;
  color: rgb(240, 240, 240);
}

QDockWidget
{
  background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:0.5, y2:0, stop:0 rgba(50, 50, 60, 255), stop:1 rgba(60, 60, 70, 255));
  text-align: left;
  selection-color: rgb(192, 255, 43);
  border: 1px solid black;
  color: rgb(220, 220, 220);
  min-width: 20em;
  font: 13px;
  titlebar-close-icon: url(&quot;:/resources/close.png&quot;);
  titlebar-normal-icon: url(&quot;:/resources/undock.png&quot;);
}

QDockWidget::title
{
  text-align: left;
  background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:0.5, y2:0, stop:0 rgba(40, 40, 50, 255), stop:1 rgba(50, 50, 60, 255));
  selection-color: rgb(192, 255, 43);
  color: rgb(255, 255, 255);
  border: 0px;
  padding-left: 5px;
}

QDockWidget::close-button, QDockWidget::float-button
{
  min-height: 20px;
  min-width: 20px;
  icon-size: 20px;
}

QDockWidget::close-button
{
  subcontrol-origin: margin;
  subcontrol-position: right;
  left: -4px;
 }

QDockWidget::float-button
{
  subcontrol-origin: margin;
  subcontrol-position: right;
  left: -26px;
 }

QDockWidget::separator
{
  width: 4px;
  height: 4px;
  background: lightblue;
  margin-left: 10px;
  margin-right: 5px;
}

QLabel
{
  background-color: rgba(140, 140, 140, 200);
  border-radius: 6px;
  padding: 1px;
  font: 12px;
}

QCheckBox
{
  color: rgb(0, 0, 0);
  background-color: rgba(140, 140, 140, 200);
  border-width: 1px;
  border-radius: 6px;
  padding-right: 9px;
  spacing: 10px;
  min-height: 20px;
  min-width: 20px;
  icon-size: 20px;
  font: 12px;
}

QCheckBox::indicator
{
  width: 20px;
  height: 20px;
}

QCheckBox::indicator:unchecked
{
  image: url(&quot;:/resources/checkbox.png&quot;);
}

QCheckBox::indicator:checked
{
  image: url(&quot;:/resources/checkon.png&quot;);
}

QLineEdit
{
   border-width: 1px;
   border-radius: 5px;
   border-color: rgb(90, 90, 90);
   border-style: solid;
   padding: 2 4px;
   background-color: rgb(180, 180, 180);
   selection-background-color: rgb(98, 96, 122);
   font: 12px;
 }

QTableView
{
   border: 1px solid black;
   color: rgba(10, 10, 10, 255);
   background-color: rgba(140, 140, 140, 255);
   alternate-background-color: rgba(90, 90, 100, 255);
   selection-background-color: rgba(120, 120, 130, 200);
   font: 12px;
 }

 QTextEdit
 {
    background-color: lightgray;
    selection-background-color: rgba(120, 120, 130, 200);
 }

 QSplitter::handle
{
     background-color: darkgray
 }

 QSplitter::handle:vertical 
{
     height: 3px;
 }

 QSplitter::handle:pressed
 {
     background-color: lightgray
 }

 QMenuBar 
{
     background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,  stop:0 lightgray, stop:1 darkgray);
 }

 QMenuBar::item
 {
     spacing: 3px;
     padding: 1px 4px;
     background: transparent;
     border-radius: 4px;
 }

 QMenuBar::item:selected 
{ 
     background: #a8a8a8;
 }

 QMenuBar::item:pressed
 {
     background: #888888;
 }

 QMenu 
{
     background-color: #ABABAB;
     border: 1px solid black;
 }

 QMenu::item
 {
    background-color: transparent;
 }

 QMenu::item:selected
 { 
    background-color: rgba(120, 120, 130, 200)
 }

QTreeView
{
   border: 1px solid black;
   color: rgba(10, 10, 10, 255);
   background-color: rgba(140, 140, 140, 255);
   alternate-background-color: rgba(90, 90, 100, 255);
   selection-background-color: rgba(120, 120, 130, 200);
   font: 12px;
 }

QTreeView::branch:has-children:!has-siblings:closed, QTreeView::branch:closed:has-children:has-siblings
{
   border-image: none;
   image: url(&quot;:/resources/rightarrow.png&quot;);
 }

QTreeView::branch:open:has-children:!has-siblings, QTreeView::branch:open:has-children:has-siblings
{
   border-image: none;
   image: url(&quot;:/resources/angledarrow.png&quot;);
 }

QTreeView::branch:hover
{
   background-color: rgba(20, 20, 20, 200);
}

QTreeView::item:selected 
{
   color: rgba(20, 20, 20, 255);
 }

QScrollBar:vertical 
{
   width: 17px;
   margin: 18px 0 18px 0;
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(140, 140, 140, 200), stop:1 rgba(160, 160, 160, 255));
   border-width: 1px;
   border-color: rgb(40, 40, 40);
   border-style: solid;
   border-radius: 3px;
}

QScrollBar::handle:vertical 
{
   background-color: qlineargradient(spread:reflect, x1:0, y1:1, x2:0, y2:0.5, stop:0 rgba(50, 50, 50, 255), stop:1 rgba(150, 150, 150, 255));
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/scrollgrip.png&quot;);
   min-height: 3em;
   border-color: rgb(40, 40, 40);
   border-style: solid;
   border-radius: 3px;
}

QScrollBar::add-line:vertical 
{
   border-color: rgba(40, 40, 40, 0);
   height: 18px;
   subcontrol-position: bottom;
   subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical 
{
   border-color: rgba(40, 40, 40, 0);
   height: 18px;
   subcontrol-position: top;
   subcontrol-origin: margin;
}

QScrollBar::up-arrow:vertical
{
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/uparrow.png&quot;);
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(110, 110, 125, 255), stop:1 rgba(150, 150, 160, 255));
   border-radius: 2px;
}

QScrollBar::up-arrow:vertical:pressed
{
  color: rgb(190, 190, 190);
  background-color: rgba(50, 50, 50, 255);
  border-style: inset;
}

QScrollBar::down-arrow:vertical 
{
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/downarrow.png&quot;);
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(110, 110, 125, 255), stop:1 rgba(150, 150, 160, 255));
   border-radius: 2px;
}

QScrollBar::down-arrow:vertical:pressed
{
  color: rgb(190, 190, 190);
  background-color: rgba(50, 50, 50, 255);
  border-style: inset;
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical 
{
   background: none;
}

QScrollBar:horizontal 
{
   height: 17px;
   margin: 0 18px 0 18px;
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(140, 140, 140, 200), stop:1 rgba(160, 160, 160, 255));
   border-width: 1px;
   border-color: rgb(40, 40, 40);
   border-style: solid;
   border-radius: 3px;
}

QScrollBar::handle:horizontal 
{
   background-color: qlineargradient(spread:reflect, x1:0, y1:1, x2:0, y2:0.5, stop:0 rgba(50, 50, 50, 255), stop:1 rgba(150, 150, 150, 255));
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/scrollgriphorizontal.png&quot;);
   min-width: 3em;
   border-color: rgb(40, 40, 40);
   border-style: solid;
   border-radius: 3px;
}

QScrollBar::add-line:horizontal 
{
   border-color: rgba(40, 40, 40, 0);
   width: 18px;
   subcontrol-position: right;
   subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal 
{
   border-color: rgba(40, 40, 40, 0);
   width: 18px;
   subcontrol-position: left;
   subcontrol-origin: margin;
}

QScrollBar::left-arrow:horizontal
{
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/leftarrow.png&quot;);
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(110, 110, 125, 255), stop:1 rgba(150, 150, 160, 255));
   border-radius: 2px;
}

QScrollBar::left-arrow:horizontal:pressed
{
  color: rgb(190, 190, 190);
  background-color: rgba(50, 50, 50, 255);
  border-style: inset;
}

QScrollBar::right-arrow:horizontal 
{
   width: 17px;
   height: 17px;
   image: url(&quot;:/resources/rightarrow.png&quot;);
   background-color: qlineargradient(spread:pad, x1:0.767, y1:1, x2:1, y2:0, stop:0 rgba(110, 110, 125, 255), stop:1 rgba(150, 150, 160, 255));
   border-radius: 2px;
}

QScrollBar::right-arrow:horizontal:pressed
{
  color: rgb(190, 190, 190);
  background-color: rgba(50, 50, 50, 255);
  border-style: inset;
}

QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal 
{
   background: none;
}
  </string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <widget class="QFrame" name="frame">
      <property name="frameShape">
       <enum>QFrame::Box</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Sunken</enum>
      </property>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <layout class="QGridLayout" name="gridLayout">
         <item row="0" column="0">
          <widget class="QLabel" name="addElementLabel">
           <property name="text">
            <string>Add Child Element:</string>
           </property>
          </widget>
         </item>
         <item row="0" column="1">
          <widget class="QComboBox" name="addElementComboBox">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
          </widget>
         </item>
         <item row="0" column="3">
          <widget class="QPushButton" name="addElementButton">
           <property name="text">
            <string>Add</string>
           </property>
          </widget>
         </item>
         <item row="1" column="0">
          <widget class="QLabel" name="addAttributeLabel">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="text">
            <string>Add Attribute:</string>
           </property>
          </widget>
         </item>
         <item row="1" column="1" colspan="2">
          <widget class="QLineEdit" name="addAttributeLineEdit"/>
         </item>
         <item row="1" column="3">
          <widget class="QPushButton" name="addAttributeButton">
           <property name="text">
            <string>Add</string>
           </property>
          </widget>
         </item>
         <item row="0" column="2">
          <widget class="QPushButton" name="addNewElementPushButton">
           <property name="text">
            <string>New Element</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QSplitter" name="splitter">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="orientation">
          <enum>Qt::Horizontal</enum>
         </property>
         <widget class="QTreeWidget" name="treeWidget">
          <property name="editTriggers">
           <set>QAbstractItemView::EditKeyPressed|QAbstractItemView::SelectedClicked</set>
          </property>
          <property name="alternatingRowColors">
           <bool>true</bool>
          </property>
          <property name="autoExpandDelay">
           <number>2</number>
          </property>
          <property name="indentation">
           <number>10</number>
          </property>
          <property name="animated">
           <bool>true</bool>
          </property>
          <attribute name="headerVisible">
           <bool>false</bool>
          </attribute>
          <column>
           <property name="text">
            <string notr="true">Current Document Elements:</string>
           </property>
          </column>
         </widget>
         <widget class="QTableWidget" name="tableWidget">
          <property name="alternatingRowColors">
           <bool>true</bool>
          </property>
          <property name="cornerButtonEnabled">
           <bool>false</bool>
          </property>
          <property name="columnCount">
           <number>2</number>
          </property>
          <attribute name="horizontalHeaderVisible">
           <bool>false</bool>
          </attribute>
          <attribute name="horizontalHeaderCascadingSectionResizes">
           <bool>true</bool>
          </attribute>
          <attribute name="horizontalHeaderStretchLastSection">
           <bool>true</bool>
          </attribute>
          <attribute name="verticalHeaderVisible">
           <bool>false</bool>
          </attribute>
          <attribute name="verticalHeaderHighlightSections">
           <bool>false</bool>
          </attribute>
          <column>
           <property name="text">
            <string>Attribute:</string>
           </property>
          </column>
          <column>
           <property name="text">
            <string>Known Possible Values:</string>
           </property>
          </column>
         </widget>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="buildXMLAddDeleteLayout">
         <item>
          <widget class="QCheckBox" name="expandAllCheckBox">
           <property name="text">
            <string>Expand All</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <widget class="QPushButton" name="deleteElementButton">
           <property name="text">
            <string>Remove Highlighted Element</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
      </layout>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1015</width>
     <height>18</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuDatabase">
    <property name="title">
     <string>Profile</string>
    </property>
    <addaction name="actionAddNewDatabase"/>
    <addaction name="actionAddExistingDatabase"/>
    <addaction name="actionRemoveDatabase"/>
    <addaction name="actionSwitchSessionDatabase"/>
    <addaction name="actionImportXMLToDatabase"/>
   </widget>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>X&amp;ML</string>
    </property>
    <addaction name="actionNew"/>
    <addaction name="actionOpen"/>
    <addaction name="actionSave"/>
    <addaction name="actionSaveAs"/>
    <addaction name="separator"/>
    <addaction name="actionExit"/>
   </widget>
   <widget class="QMenu" name="menu_Advanced">
    <property name="title">
     <string>Options</string>
    </property>
    <addaction name="actionSuperUserMode"/>
    <addaction name="actionForgetPreferences"/>
   </widget>
   <addaction name="menuFile"/>
   <addaction name="menuDatabase"/>
   <addaction name="menu_Advanced"/>
  </widget>
  <widget class="QToolBar" name="mainToolBar">
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
  </widget>
  <widget class="QStatusBar" name="statusBar"/>
  <widget class="QDockWidget" name="dockWidget">
   <property name="features">
    <set>QDockWidget::DockWidgetFloatable|QDockWidget::DockWidgetMovable</set>
   </property>
   <property name="windowTitle">
    <string>DOM Content</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>2</number>
   </attribute>
   <widget class="QWidget" name="dockWidgetContents">
    <layout class="QVBoxLayout" name="dockWidgetVerticalLayout">
     <item>
      <widget class="QTextEdit" name="dockWidgetTextEdit">
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAsNeeded</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAsNeeded</enum>
       </property>
       <property name="lineWrapMode">
        <enum>QTextEdit::WidgetWidth</enum>
       </property>
      </widget>
     </item>
     <item>
      <layout class="QHBoxLayout" name="dockWidgetHorizontalLayout">
       <item>
        <spacer name="dockWidgetHorizontalSpacer">
         <property name="orientation">
          <enum>Qt::Horizontal</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>40</width>
           <height>20</height>
          </size>
         </property>
        </spacer>
       </item>
       <item>
        <widget class="QPushButton" name="dockWidgetSaveButton">
         <property name="text">
          <string>Save Changes</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
    </layout>
   </widget>
  </widget>
  <action name="actionAddNewDatabase">
   <property name="text">
    <string>&amp;Add New Profile</string>
   </property>
   <property name="toolTip">
    <string>Add a new database to the list of known databases.</string>
   </property>
   <property name="whatsThis">
    <string>Add a new database to the list of known databases.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+D</string>
   </property>
  </action>
  <action name="actionAddExistingDatabase">
   <property name="text">
    <string>Add &amp;Existing Profile</string>
   </property>
   <property name="toolTip">
    <string>Add an existing database to the list of known databases.</string>
   </property>
   <property name="whatsThis">
    <string>Add an existing database to the list of known databases.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+E</string>
   </property>
  </action>
  <action name="actionOpen">
   <property name="icon">
    <iconset resource="resources/gcresources.qrc">
     <normaloff>:/resources/open.png</normaloff>:/resources/open.png</iconset>
   </property>
   <property name="text">
    <string>&amp;Open File</string>
   </property>
   <property name="toolTip">
    <string>Open an XML file.</string>
   </property>
   <property name="whatsThis">
    <string>Open an XML file.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
  </action>
  <action name="actionSave">
   <property name="enabled">
    <bool>false</bool>
   </property>
   <property name="icon">
    <iconset resource="resources/gcresources.qrc">
     <normaloff>:/resources/save.png</normaloff>:/resources/save.png</iconset>
   </property>
   <property name="text">
    <string>&amp;Save File</string>
   </property>
   <property name="whatsThis">
    <string>Save XML file.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+S</string>
   </property>
  </action>
  <action name="actionRemoveDatabase">
   <property name="text">
    <string>&amp;Remove Profile</string>
   </property>
   <property name="toolTip">
    <string>Remove a database from the list of known databases.</string>
   </property>
   <property name="whatsThis">
    <string>Remove a database from the list of known databases.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+R</string>
   </property>
  </action>
  <action name="actionSwitchSessionDatabase">
   <property name="text">
    <string>S&amp;witch Profile</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Shift+D</string>
   </property>
  </action>
  <action name="actionSaveAs">
   <property name="enabled">
    <bool>false</bool>
   </property>
   <property name="text">
    <string>Save File &amp;As</string>
   </property>
   <property name="whatsThis">
    <string>Sae XML file as.</string>
   </property>
  </action>
  <action name="actionNew">
   <property name="icon">
    <iconset resource="resources/gcresources.qrc">
     <normaloff>:/resources/new.png</normaloff>:/resources/new.png</iconset>
   </property>
   <property name="text">
    <string>&amp;New File</string>
   </property>
   <property name="toolTip">
    <string>Create new XML file.</string>
   </property>
   <property name="whatsThis">
    <string>Create new XML file.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+N</string>
   </property>
   <property name="shortcutContext">
    <enum>Qt::WindowShortcut</enum>
   </property>
  </action>
  <action name="actionSuperUserMode">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>&amp;Super User Mode</string>
   </property>
   <property name="toolTip">
    <string>Super user mode allows you to edit the active database.</string>
   </property>
   <property name="whatsThis">
    <string>Super user mode allows you to edit the active database.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Shift+U</string>
   </property>
  </action>
  <action name="actionExit">
   <property name="icon">
    <iconset resource="resources/gcresources.qrc">
     <normaloff>:/resources/close.png</normaloff>:/resources/close.png</iconset>
   </property>
   <property name="text">
    <string>E&amp;xit</string>
   </property>
   <property name="whatsThis">
    <string>Close the application.</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+X</string>
   </property>
  </action>
  <action name="actionForgetPreferences">
   <property name="text">
    <string>Forget Saved Preferences</string>
   </property>
   <property name="whatsThis">
    <string>Forget all saved preferences regarding messages/warnings/queries.</string>
   </property>
  </action>
  <action name="actionImportXMLToDatabase">
   <property name="text">
    <string>Import XML to Profile</string>
   </property>
   <property name="whatsThis">
    <string>Import the current XML document to the active profile.</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources>
  <include location="resources/gcresources.qrc"/>
 </resources>
 <connections/>
</ui>
